import React, { useState } from 'react';
import axios from 'axios';
import './CreateFundraiser.css';

const CreateFundraiser = () => {
    const [title, setTitle] = useState('');
    const [creatorName, setCreatorName] = useState('');
    const [contactInfo, setContactInfo] = useState('');
    const [description, setDescription] = useState('');
    const [goalAmount, setGoalAmount] = useState('');
    const [donationLink, setDonationLink] = useState('');
    const [evidence, setEvidence] = useState('');
    const [evidenceFile, setEvidenceFile] = useState(null);
    const [evidenceLink, setEvidenceLink] = useState('');
    const [category, setCategory] = useState('other');
    const [image, setImage] = useState(null);
    const [error, setError] = useState(null);
    const [success, setSuccess] = useState(false);

    const handleFileChange = (e) => setEvidenceFile(e.target.files[0]);
    const handleImageChange = (e) => setImage(e.target.files[0]);

    const handleSubmit = async (e) => {
        e.preventDefault();
        
        const parsedGoalAmount = parseFloat(goalAmount);
        if (isNaN(parsedGoalAmount) || parsedGoalAmount <= 0) {
            setError('–¶—ñ–ª—å–æ–≤–∞ —Å—É–º–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —á–∏—Å–ª–æ–º –±—ñ–ª—å—à–µ –∑–∞ –Ω—É–ª—å');
            return;
        }

        const formData = new FormData();
        formData.append('title', title);
        formData.append('creator_name', creatorName);
        formData.append('contact_info', contactInfo);
        formData.append('description', description);
        formData.append('goal_amount', parsedGoalAmount);
        formData.append('donation_link', donationLink);
        formData.append('evidence', evidence);
        formData.append('category', category);
        formData.append('evidence_link', evidenceLink);
        if (evidenceFile) formData.append('evidence_file', evidenceFile);
        if (image) formData.append('image', image);

        try {
            const token = localStorage.getItem('token');
            const response = await axios.post(
                'http://127.0.0.1:8000/api/fundraisers/create/',
                formData,
                {
                    headers: {
                        'Content-Type': 'multipart/form-data',
                        'Authorization': `Token ${token}`,
                    },
                }
            );

            setSuccess(true);
            setError(null);
            console.log('–£—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ:', response.data);

            // –û—á–∏—â–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏
            setTitle('');
            setCreatorName('');
            setContactInfo('');
            setDescription('');
            setGoalAmount('');
            setDonationLink('');
            setEvidence('');
            setEvidenceFile(null);
            setEvidenceLink('');
            setCategory('other');
            setImage(null);
        } catch (err) {
            setError(err.response?.data || '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞');
            setSuccess(false);
        }
    };

    return (
        <div className="container" id="createFundraiser">
            <h2>–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –∑–±—ñ—Ä</h2>
            {success && <p className="success">–ó–±—ñ—Ä —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!</p>}
            {error && <p className="error">{JSON.stringify(error)}</p>}

            <form onSubmit={handleSubmit} className="form">
                <div className="form-group">
                    <label className="input-label">–ù–∞–∑–≤–∞ –∑–±–æ—Ä—É</label>
                    <input type="text" value={title} onChange={(e) => setTitle(e.target.value)} required className="input" />
                </div>

                <div className="form-group">
                    <label className="input-label">–Ü–º'—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞</label>
                    <input type="text" value={creatorName} onChange={(e) => setCreatorName(e.target.value)} required className="input" />
                </div>

                <div className="form-group">
                    <label className="input-label">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</label>
                    <input type="email" value={contactInfo} onChange={(e) => setContactInfo(e.target.value)} required className="input" />
                </div>

                <div className="form-group">
                    <label className="input-label">–û–ø–∏—Å –∑–±–æ—Ä—É</label>
                    <textarea value={description} onChange={(e) => setDescription(e.target.value)} required className="textarea" />
                </div>

                <div className="form-group">
                    <label className="input-label">–¶—ñ–ª—å–æ–≤–∞ —Å—É–º–∞</label>
                    <input type="number" value={goalAmount} onChange={(e) => setGoalAmount(e.target.value)} required className="input" />
                </div>

                <div className="form-group">
                    <label className="input-label">–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¥–æ–Ω–∞—Ç–∏ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
                    <input type="url" value={donationLink} onChange={(e) => setDonationLink(e.target.value)} className="input" />
                </div>

                <div className="form-group">
                    <label className="input-label">–¢–µ–∫—Å—Ç–æ–≤–∏–π –¥–æ–∫–∞–∑ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
                    <textarea value={evidence} onChange={(e) => setEvidence(e.target.value)} className="textarea" />
                </div>

                <div className="form-group file-input-group">
                    <label className="file-input-label">–§–∞–π–ª-–¥–æ–∫–∞–∑ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
                    <div className="file-input-wrapper evidence">
                        <div className="file-input-icon">üìÑ</div>
                        <div className="file-input-text">–ü–µ—Ä–µ—Ç—è–≥–Ω—ñ—Ç—å —Ñ–∞–π–ª —Å—é–¥–∏ –∞–±–æ –∫–ª—ñ–∫–Ω—ñ—Ç—å –¥–ª—è –≤–∏–±–æ—Ä—É</div>
                        <div className="file-input-hint">PDF, DOC, JPG, PNG (–º–∞–∫—Å. 5MB)</div>
                        <input 
                            type="file" 
                            className="file-input" 
                            onChange={handleFileChange} 
                            accept=".pdf,.doc,.docx,.jpg,.jpeg,.png" 
                        />
                    </div>
                    {evidenceFile && <div className="file-name">–û–±—Ä–∞–Ω–æ: {evidenceFile.name}</div>}
                </div>

                <div className="form-group">
                    <label className="input-label">–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¥–æ–∫–∞–∑ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
                    <input type="url" value={evidenceLink} onChange={(e) => setEvidenceLink(e.target.value)} className="input" />
                </div>

                <div className="form-group">
                    <label className="input-label">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è</label>
                    <select value={category} onChange={(e) => setCategory(e.target.value)} className="select">
                        <option value="health">–ó–¥–æ—Ä–æ–≤'—è</option>
                        <option value="social">–°–æ—Ü—ñ–∞–ª—å–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞</option>
                        <option value="education">–û—Å–≤—ñ—Ç–∞ —Ç–∞ –Ω–∞—É–∫–∞</option>
                        <option value="ecology">–ï–∫–æ–ª–æ–≥—ñ—è —Ç–∞ —Ç–≤–∞—Ä–∏–Ω–∏</option>
                        <option value="other">–Ü–Ω—à–µ</option>
                    </select>
                </div>

                <div className="form-group file-input-group">
                    <label className="file-input-label">–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –∑–±–æ—Ä—É</label>
                    <div className="file-input-wrapper image">
                        <div className="file-input-icon">üñºÔ∏è</div>
                        <div className="file-input-text">–ü–µ—Ä–µ—Ç—è–≥–Ω—ñ—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—é–¥–∏ –∞–±–æ –∫–ª—ñ–∫–Ω—ñ—Ç—å –¥–ª—è –≤–∏–±–æ—Ä—É</div>
                        <div className="file-input-hint">JPG, PNG, GIF (–º–∞–∫—Å. 10MB)</div>
                        <input 
                            type="file" 
                            className="file-input" 
                            onChange={handleImageChange} 
                            accept="image/*" 
                        />
                    </div>
                    {image && <div className="file-name">–û–±—Ä–∞–Ω–æ: {image.name}</div>}
                </div>

                <button type="submit" className="button">–°—Ç–≤–æ—Ä–∏—Ç–∏</button>
            </form>
        </div>
    );
};

export default CreateFundraiser;