import React, { useState } from 'react';
import axios from 'axios';
import './CreateFundraiser.css'; 

const CreateFundraiser = () => {
    const [title, setTitle] = useState('');
    const [creatorName, setCreatorName] = useState('');
    const [contactInfo, setContactInfo] = useState('');
    const [description, setDescription] = useState('');
    const [goalAmount, setGoalAmount] = useState('');
    const [donationLink, setDonationLink] = useState('');
    const [evidence, setEvidence] = useState('');
    const [evidenceFile, setEvidenceFile] = useState(null);
    const [evidenceLink, setEvidenceLink] = useState('');
    const [category, setCategory] = useState('other');
    const [image, setImage] = useState(null);
    const [error, setError] = useState(null);
    const [success, setSuccess] = useState(false);

    const handleFileChange = (e) => {
        setEvidenceFile(e.target.files[0]);
    };

    const handleImageChange = (e) => {
        setImage(e.target.files[0]);
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        
        if (isNaN(goalAmount) || goalAmount <= 0) {
            setError('–¶—ñ–ª—å–æ–≤–∞ —Å—É–º–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —á–∏—Å–ª–æ–º –±—ñ–ª—å—à–µ –∑–∞ –Ω—É–ª—å');
            return;
        }

        const formData = new FormData();
        formData.append('title', title);
        formData.append('creator_name', creatorName);
        formData.append('contact_info', contactInfo);
        formData.append('description', description);
        formData.append('goal_amount', goalAmount);
        formData.append('donation_link', donationLink);
        formData.append('evidence', evidence);
        formData.append('category', category);
        formData.append('evidence_link', evidenceLink);
        
        if (evidenceFile) {
            formData.append('evidence_file', evidenceFile);
        }

        if (image) {
            formData.append('image', image);
        }

        try {
            const response = await axios.post('http://127.0.0.1:8000/api/fundraisers/create/', formData, {
                headers: {
                    'Content-Type': 'multipart/form-data',
                },
            });
            setSuccess(true);
            setError(null);
            console.log('–£—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ:', response.data);
            // –û—á–∏—â–∞—î–º–æ —Ñ–æ—Ä–º—É –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
            setTitle('');
            setCreatorName('');
            setContactInfo('');
            setDescription('');
            setGoalAmount('');
            setDonationLink('');
            setEvidence('');
            setEvidenceFile(null);
            setEvidenceLink('');
            setCategory('other');
            setImage(null);
        } catch (err) {
            setError(err.response?.data || '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞');
            setSuccess(false);
        }
    };

    return (
        <div className="container" id="createFundraiser">
            <h2>–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –∑–±—ñ—Ä</h2>
            {success && <p className="success">–ó–±—ñ—Ä —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!</p>}
            {error && <p className="error">{JSON.stringify(error)}</p>}

            <form onSubmit={handleSubmit} className="form">
                <div className="form-group">
                    <label className="input-label">–ù–∞–∑–≤–∞ –∑–±–æ—Ä—É</label>
                    <input 
                        type="text" 
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∑–±–æ—Ä—É" 
                        value={title} 
                        onChange={(e) => setTitle(e.target.value)} 
                        required 
                        className="input" 
                    />
                </div>

                <div className="form-group">
                    <label className="input-label">–Ü–º'—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞</label>
                    <input 
                        type="text" 
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è" 
                        value={creatorName} 
                        onChange={(e) => setCreatorName(e.target.value)} 
                        required 
                        className="input" 
                    />
                </div>

                <div className="form-group">
                    <label className="input-label">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</label>
                    <input 
                        type="email" 
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à email" 
                        value={contactInfo} 
                        onChange={(e) => setContactInfo(e.target.value)} 
                        required 
                        className="input" 
                    />
                </div>

                <div className="form-group">
                    <label className="input-label">–û–ø–∏—Å –∑–±–æ—Ä—É</label>
                    <textarea 
                        placeholder="–î–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—à—ñ—Ç—å –º–µ—Ç—É –∑–±–æ—Ä—É" 
                        value={description} 
                        onChange={(e) => setDescription(e.target.value)} 
                        required 
                        className="textarea" 
                    />
                </div>

                <div className="form-group">
                    <label className="input-label">–¶—ñ–ª—å–æ–≤–∞ —Å—É–º–∞</label>
                    <input 
                        type="number" 
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω—É —Å—É–º—É" 
                        value={goalAmount} 
                        onChange={(e) => setGoalAmount(e.target.value)} 
                        required 
                        className="input" 
                    />
                </div>

                <div className="form-group">
                    <label className="input-label">–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¥–æ–Ω–∞—Ç–∏ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
                    <input 
                        type="url" 
                        placeholder="https://example.com/donate" 
                        value={donationLink} 
                        onChange={(e) => setDonationLink(e.target.value)} 
                        className="input" 
                    />
                </div>

                <div className="form-group">
                    <label className="input-label">–¢–µ–∫—Å—Ç–æ–≤–∏–π –¥–æ–∫–∞–∑ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
                    <textarea 
                        placeholder="–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è" 
                        value={evidence} 
                        onChange={(e) => setEvidence(e.target.value)} 
                        className="textarea" 
                    />
                </div>

                {/* Evidence File Upload with improved styling */}
                <div className="file-input-container evidence-file-container">
                    <label className="file-input-label">–§–∞–π–ª-–¥–æ–∫–∞–∑ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
                    <div className="file-input-wrapper">
                        <span className="file-input-icon">üìã</span>
                        <span className="file-input-text">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å —Ç—É—Ç, —â–æ–± –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç-–¥–æ–∫–∞–∑</span>
                        <span className="file-input-text small">–ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏: PDF, DOC, DOCX, JPG, PNG</span>
                        <input 
                            type="file" 
                            className="file-input" 
                            onChange={handleFileChange} 
                            accept=".pdf,.doc,.docx,.jpg,.jpeg,.png"
                        />
                        {evidenceFile && (
                            <span className="file-input-selected">
                                –û–±—Ä–∞–Ω–æ —Ñ–∞–π–ª: {evidenceFile.name}
                            </span>
                        )}
                    </div>
                </div>

                <div className="form-group">
                    <label className="input-label">–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¥–æ–∫–∞–∑ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
                    <input 
                        type="url" 
                        placeholder="https://example.com/evidence" 
                        value={evidenceLink} 
                        onChange={(e) => setEvidenceLink(e.target.value)} 
                        className="input" 
                    />
                </div>
                
                <div className="form-group">
                    <label className="input-label">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è</label>
                    <select 
                        value={category} 
                        onChange={(e) => setCategory(e.target.value)} 
                        className="select"
                    >
                        <option value="health">–ó–¥–æ—Ä–æ–≤'—è</option>
                        <option value="social">–°–æ—Ü—ñ–∞–ª—å–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞</option>
                        <option value="education">–û—Å–≤—ñ—Ç–∞ —Ç–∞ –Ω–∞—É–∫–∞</option>
                        <option value="ecology">–ï–∫–æ–ª–æ–≥—ñ—è —Ç–∞ —Ç–≤–∞—Ä–∏–Ω–∏</option>
                        <option value="other">–Ü–Ω—à–µ</option>
                    </select>
                </div>
                
                {/* Image Upload with improved styling */}
                <div className="file-input-container image-file-container">
                    <label className="file-input-label">–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –∑–±–æ—Ä—É</label>
                    <div className="file-input-wrapper">
                        <span className="file-input-icon">üñºÔ∏è</span>
                        <span className="file-input-text">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å —Ç—É—Ç, —â–æ–± –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</span>
                        <span className="file-input-text small">–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏: 1200 √ó 630 –ø—ñ–∫—Å–µ–ª—ñ–≤</span>
                        <input 
                            type="file" 
                            className="file-input" 
                            onChange={handleImageChange} 
                            accept="image/*"
                        />
                        {image && (
                            <span className="file-input-selected">
                                –û–±—Ä–∞–Ω–æ —Ñ–∞–π–ª: {image.name}
                            </span>
                        )}
                    </div>
                </div>
                
                <button type="submit" className="button">–°—Ç–≤–æ—Ä–∏—Ç–∏</button>
            </form>
        </div>
    );
};

export default CreateFundraiser;